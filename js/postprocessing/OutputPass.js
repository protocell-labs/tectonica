!function(){class e extends THREE.Pass{constructor(){super();const e=THREE.OutputShader;this.uniforms=THREE.UniformsUtils.clone(e.uniforms),this.material=new THREE.RawShaderMaterial({uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader}),this.fsQuad=new THREE.FullScreenQuad(this.material),this._outputColorSpace=null,this._toneMapping=null}render(e,t,i){this.uniforms.tDiffuse.value=i.texture,this.uniforms.toneMappingExposure.value=e.toneMappingExposure,this._outputColorSpace===e.outputColorSpace&&this._toneMapping===e.toneMapping||(this._outputColorSpace=e.outputColorSpace,this._toneMapping=e.toneMapping,this.material.defines={},THREE.ColorManagement.getTransfer(this._outputColorSpace)===THREE.SRGBTransfer&&(this.material.defines.SRGB_TRANSFER=""),this._toneMapping===THREE.LinearToneMapping?this.material.defines.LINEAR_TONE_MAPPING="":this._toneMapping===THREE.ReinhardToneMapping?this.material.defines.REINHARD_TONE_MAPPING="":this._toneMapping===THREE.CineonToneMapping?this.material.defines.CINEON_TONE_MAPPING="":this._toneMapping===THREE.ACESFilmicToneMapping&&(this.material.defines.ACES_FILMIC_TONE_MAPPING=""),this.material.needsUpdate=!0),!0===this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this.fsQuad.render(e))}dispose(){this.material.dispose(),this.fsQuad.dispose()}}THREE.OutputPass=e}();