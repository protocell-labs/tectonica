!function(){const t={uniforms:{tDiffuse:{value:null},toneMappingExposure:{value:1}},vertexShader:"\n\t\t\tprecision highp float;\n\n\t\t\tuniform mat4 modelViewMatrix;\n\t\t\tuniform mat4 projectionMatrix;\n\n\t\t\tattribute vec3 position;\n\t\t\tattribute vec2 uv;\n\n\t\t\tvarying vec2 vUv;\n\n\t\t\tvoid main() {\n\n\t\t\t\tvUv = uv;\n\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t\t}",fragmentShader:"\n\t\t\n\t\t\tprecision highp float;\n\n\t\t\tuniform sampler2D tDiffuse;\n\n\t\t\t"+THREE.ShaderChunk.tonemapping_pars_fragment+THREE.ShaderChunk.colorspace_pars_fragment+"\n\n\t\t\tvarying vec2 vUv;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = texture2D( tDiffuse, vUv );\n\n\t\t\t\t// tone mapping\n\n\t\t\t\t#ifdef LINEAR_TONE_MAPPING\n\n\t\t\t\t\tgl_FragColor.rgb = LinearToneMapping( gl_FragColor.rgb );\n\n\t\t\t\t#elif defined( REINHARD_TONE_MAPPING )\n\n\t\t\t\t\tgl_FragColor.rgb = ReinhardToneMapping( gl_FragColor.rgb );\n\n\t\t\t\t#elif defined( CINEON_TONE_MAPPING )\n\n\t\t\t\t\tgl_FragColor.rgb = OptimizedCineonToneMapping( gl_FragColor.rgb );\n\n\t\t\t\t#elif defined( ACES_FILMIC_TONE_MAPPING )\n\n\t\t\t\t\tgl_FragColor.rgb = ACESFilmicToneMapping( gl_FragColor.rgb );\n\n\t\t\t\t#endif\n\n\t\t\t\t// color space\n\n\t\t\t\t#ifdef SRGB_TRANSFER\n\n\t\t\t\t\tgl_FragColor = sRGBTransferOETF( gl_FragColor );\n\n\t\t\t\t#endif\n\n\t\t\t}"};THREE.OutputShader=t}();